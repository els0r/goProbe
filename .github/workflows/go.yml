# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  - push
  - pull_request

jobs:

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.21
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Test
      run: |
        go test -tags jsoniter -v ./... -covermode=atomic -coverprofile=coverage.out
        go tool cover -func=coverage.out -o=coverage.out

    - name: Test (No-CGO Mode)
      run: |
        CGO_ENABLED=0 go test -tags jsoniter -v ./...

    - name: Test (Production Mode)
      run: |
        go test -tags jsoniter,slimcap_nomock -v ./...

    - name: Race Detector
      run: |
        go test -tags jsoniter -race -v ./...

    - name: Build for AMD64
      run: GOOS=linux GOARCH=amd64 go build -tags jsoniter -v -a ./...

    - name: Build for AMD64 (Production Mode)
      run: GOOS=linux GOARCH=amd64 go build -tags jsoniter,slimcap_nomock -v -a ./...

    - name: Build for AMD64 (No-GCO Mode)
      run: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -tags jsoniter -v -a ./...
